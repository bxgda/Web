// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTemplate.Models;

#nullable disable

namespace WebTemplate.Migrations
{
    [DbContext(typeof(IspitContext))]
    partial class IspitContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTemplate.Models.Kupovina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojUgovora")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKupovime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("IsplacenaVrednost")
                        .HasColumnType("float");

                    b.Property<int>("KoJeKupioID")
                        .HasColumnType("int");

                    b.Property<int>("KupljenaNekretninaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KoJeKupioID");

                    b.HasIndex("KupljenaNekretninaID");

                    b.ToTable("Kupovine");
                });

            modelBuilder.Entity("WebTemplate.Models.Nekretnina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BrojPrethnodnihVlasnika")
                        .HasColumnType("int");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Vrednost")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Nekretnine");
                });

            modelBuilder.Entity("WebTemplate.Models.Vlasnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MestoRodjenja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Vlasnici");
                });

            modelBuilder.Entity("WebTemplate.Models.Kupovina", b =>
                {
                    b.HasOne("WebTemplate.Models.Vlasnik", "KoJeKupio")
                        .WithMany()
                        .HasForeignKey("KoJeKupioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebTemplate.Models.Nekretnina", "KupljenaNekretnina")
                        .WithMany()
                        .HasForeignKey("KupljenaNekretninaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KoJeKupio");

                    b.Navigation("KupljenaNekretnina");
                });
#pragma warning restore 612, 618
        }
    }
}
